summary(pit24$WHIP)
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 27)
summary(pit24$ERA)
summary(pit24$WHIP)
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
summary(pit24$ERA)
summary(pit24$WHIP)
hist(pit24$ERA)
View(pit24)
lm <- lm(ERA ~ OPS)
lm <- lm(data = pit24, ERA ~ OPS)
summary(lm)
lm <- lm(data = pit24, ERA ~ WHIP)
summary(lm)
lm <- lm(data = pit24, ERA ~ BA)
summary(lm)
lm <- lm(data = pit24, ERA ~ SO9)
summary(lm)
lm <- lm(data = pit24, ERA ~ SO.BB)
summary(lm)
lm <- lm(data = pit24, ERA ~ WAR)
summary(lm)
lm <- lm(data = pit24, ERA ~ SLG)
summary(lm)
lm <- lm(data = pit24, ERA ~ OPS)
summary(lm)
lm <- lm(data = pit24, ERA ~ OPS + BB)
summary(lm)
lm <- lm(data = pit24, ERA ~ BB)
summary(lm)
lm <- lm(data = pit24, ERA ~ EV)
summary(lm)
lm <- lm(data = pit24, ERA ~ OPS + EV)
summary(lm)
lm <- lm(data = pit24, ERA ~ BA + HARDH.)
summary(lm)
lm <- lm(data = pit24, ERA ~ BA + HardH.)
summary(lm)
lm <- lm(data = pit24, WHIP ~ H9 + BB9)
summary(lm)
lm <- lm(data = pit24, WHIP ~ H9)
summary(lm)
lm <- lm(data = pit24, WHIP ~ BB9)
summary(lm)
lm <- lm(data = pit24, WHIP ~ BB9 + H9)
summary(lm)
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
View(pit24)
ID<- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
urls[[i]] <- url
}
urls <- urls %>%
unlist() %>%
as.data.frame() %>%
dplyr::mutate(ID = IDs) %>%
dplyr::rename(url = ".")
library(rvest)
library(tidyverse)
years <- c(2000:2024)
urls <- list()
for (i in 1:length(years)) {
url <- paste0("https://www.baseball-reference.com/leagues/majors/", years[i], ".shtml")
urls[[i]] <- url
}
View(urls)
urls <- urls %>%
unlist() %>%
as.data.frame() %>%
dplyr::mutate(year = years) %>%
dplyr::rename(url = ".")
View(urls)
library(rvest)
library(tidyverse)
# Create the ID
ID<- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
# Create the ID
ID<- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
# Create the ID
ID<- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
urls[[i]] <- url
}
urls <- urls %>%
unlist() %>%
as.data.frame() %>%
dplyr::rename(url = ".")
View(urls)
scrape_data_funcion <- function(url, ID){
df <- url %>%
xml2:: read_html() %>%
rvest::html_elements("table") %>%
rvest::html_table(trim = TRUE)
df
}
mlb23 <- scrape_data_funcion(urls$url[1], 2023)
mlb23 <- as.data.frame(mlb23)
View(mlb23)
View(urls)
length(ID)
view(URL)
view(url)
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
ID <- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
}
urls <- urls %>%
unlist() %>%
as.data.frame() %>%
dplyr::rename(url = ".")
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
urls[[i]] <- url
}
View(urls)
urls <- urls %>%
unlist() %>%
as.data.frame() %>%
dplyr::rename(url = ".")
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
# Create the ID
ID <- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
urls[[i]] <- url
}
urls <- urls %>%
unlist(use.names = FALSE) %>%
as.data.frame() %>%
dplyr::rename(url = 1)
str(urls)
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 26)
library(tidyverse)
# Create the ID
ID <- sapply(strsplit(as.character(pit24$Player), " "), function(x) {
first <- substr(x[1], 1, 2) # first two of first name
last <- substr(x[length(x)], 1, 5) # first five of last name (handles middle names too)
paste0(tolower(last), tolower(first))
})
urls <- list()
for (i in 1:length(ID)) {
url <- paste0("https://www.baseball-reference.com/players/gl.fcgi?id=", ID, "01&t=p&year=2024")
urls[[i]] <- url
}
urls <- lapply(urls, paste0, collapse = "")
urls <- urls %>%
unlist(use.names = FALSE) %>%
as.data.frame() %>%
dplyr::rename(url = 1)
urls <- urls %>%
unlist(use.names = FALSE) %>%
as.data.frame() %>%
dplyr::rename(url = 1)
install.packages("baseballr")
library(baseballr)
# Lookup Logan Webb
player_info <- playerid_lookup("Webb", "Logan")
View(player_info)
webb_logs <- mlb_player_game_logs(
player_id = 657336,
season = 2023,
player_type = "pitcher"
)
install.packages("devtools")
devtools::install_github("billpetti/baseballr")
# View result
print(player_info)
webb_logs <- mlb_player_game_logs(
player_id = 657336,
season = 2023,
player_type = "pitcher"
)
library(baseballr)
library(dplyr)
# Logan Webb's ID
logans_id <- 657336
# Get Statcast data for 2023 season (Apr–Oct range)
webb_statcast <- statcast_search(
start_date = "2023-04-01",
end_date = "2023-10-01",
player_type = "pitcher",
playerid = logans_id
# Get Statcast data for 2023 season (Apr–Oct range)
webb_statcast <- statcast_search(
library(baseballr)
library(tidyverse)
game_packs <- baseballr::get_game_pks_mlb(date = "2025-05-26", level_ids = 1)
View(game_packs)
game_packs <- baseballr::get_game_pks_mlb(date = "2025-05-26", level_ids = 2)
View(game_packs)
game_packs <- baseballr::get_game_pks_mlb(date = "2025-05-26", level_ids = 1)
View(game_packs)
mlb_player_game_stats(666808)
mlb_player_game_stats(person_id = 666808)
skubal_info <- mlb_search("Tarik Skubal")
?baseballr
ls(baseballr)
ls("package:baseballr")
mlb_player_game_stats()
?mlb_player_game_stats()
playerid_lookup("Tarik Skubal")
Tarik <- playerid_lookup("Tarik Skubal")
View(Tarik)
Tarik <- playerid_lookup("Barry Bonds")
mlb_player_game_stats(person_id = 666808)
mlb_player_game_stats(person_id = 666808, game_pk = )
mlb_player_game_stats(person_id = 605151, game_pk = 531368)
idk <- mlb_player_game_stats(person_id = 605151, game_pk = 531368)
View(idk)
playername_lookup(605151)
View(idk)
ls("package:baseballr")
?pitcher_game_logs_fg
pitcher_game_logs_fg(playerid = 666808, year = 2024)
skubal_fg <- fg_player_info("Tarik Skubal")
pitcher_game_logs_fg(playerid = 208178, year = 2024)
pitcher_game_logs_fg(playerid = 22267, year = 2024)
log <- pitcher_game_logs_fg(playerid = 22267, year = 2024)
View(log)
library(baseballr)
library(tidyverse)
playername_lookup(605151)
?ls()
pit24 <- read.csv("C:/Users/alexs/OneDrive/Desktop/MLB/data/Pitchers24.csv")
library("dplyr")
library("stringr")
pit24 <- pit24[,c(-1, -(3:5), -(37:44),-62,-63)]
pit24$HR. <- as.numeric(sub("%", "", pit24$HR.,fixed=TRUE))/100
pit24$K. <- as.numeric(sub("%", "", pit24$K.,fixed=TRUE))/100
pit24$BB. <- as.numeric(sub("%", "", pit24$BB.,fixed=TRUE))/100
pit24$HardH. <- as.numeric(sub("%", "", pit24$HardH.,fixed=TRUE))/100
pit24$LD. <- as.numeric(sub("%", "", pit24$LD.,fixed=TRUE))/100
pit24$GB. <- as.numeric(sub("%", "", pit24$GB.,fixed=TRUE))/100
pit24$FB. <- as.numeric(sub("%", "", pit24$FB.,fixed=TRUE))/100
pit24$cWPA <- as.numeric(sub("%", "", pit24$cWPA,fixed=TRUE))/100
pit24 <- pit24 %>%
distinct(Player, .keep_all = TRUE) %>%
mutate(across(is.numeric, round, digits = 3))%>%
filter(IP > 0)
players<- fg_pitch_leaders()
View(players)
View(players)
players<- fg_pitch_leaders(startseason = 2024, endseason = 2024)
View(players)
players<- fg_pitch_leaders(startseason = 2024, endseason = 2024)
pitcherID <- df(players$PlayerName, players$playerid)
pitcherID <- data.frame(players$PlayerName, players$playerid)
View(pitcherID)
pitcherID <- players$playerid
idk <- for i in length(pitcherID):
for i in length(pitcherID):
for (i in length(pitcherID)):
for (i in length(pitcherID)){
pitcher_game_logs_fg(playerid = [i], year = 2024)
pitcher_game_logs_fg(playerid = i, year = 2024)
pitcher_game_logs_fg(playerid = pitcherID, year = 2024)
View(players)
pitcher_game_logs_fg(playerid = i, year = 2024)
pitcher_game_logs_fg(playerid = pitcherID, year = 2024)
library(baseballr)
library(tidyverse)
ls("package:baseballr")
players<- fg_pitch_leaders(startseason = 2024, endseason = 2024)
pitcher_logs_2024 <- list()  # named list to store each pitcher's data
for (i in 1:nrow(pitchers)) {
name <- pitchers$PlayerName[i]
id <- pitchers$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
View(players)
for (i in 1:nrow(players$PlayerName)) {
name <- pitchers$PlayerName[i]
id <- pitchers$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
pitcherID <- players$playerid
for (i in 1:nrow(pitcherID)) {
name <- pitchers$PlayerName[i]
id <- pitchers$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
for (i in 1:nrow(players)) {
name <- pitchers$PlayerName[i]
id <- pitchers$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
library(baseballr)
library(tidyverse)
ls("package:baseballr")
players<- fg_pitch_leaders(startseason = 2024, endseason = 2024)
pitcher_logs_2024 <- list()  # named list to store each pitcher's data
id <- pitchers$playerid[i]
for (i in 1:nrow(players)) {
name <- players$PlayerName[i]
id <- players$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
View(players)
View(logs)
View(pitcher_logs_2024)
View(pitcher_logs_2024)
pitcher_logs_2024$`Chris Sale`
Chris Sale <- pitcher_logs_2024$`Chris Sale`
Chris Sale <- pitcher_logs_2024$Chris Sale
Chris Sale <- pitcher_logs_2024$`Chris Sale`
ChrisSale <- pitcher_logs_2024$`Chris Sale`
View(ChrisSale)
View(pitcher_logs_2024)
View(players)
library(baseballr)
library(tidyverse)
players<- fg_pitch_leaders(startseason = 2024, endseason = 2024)
View(players)
players <- players %>%
filter(IP >= 27)
pitcher_logs_2024 <- list()  # named list to store each pitcher's data
View(players)
for (i in 1:nrow(players)) {
name <- players$PlayerName[i]
id <- players$playerid[i]
message("Fetching data for: ", name)
# Use tryCatch to skip failed scrapes gracefully
logs <- tryCatch({
Sys.sleep(2)  # be polite to FanGraphs!
pitcher_game_logs_fg(playerid = id, year = 2024)
}, error = function(e) {
message("Failed for: ", name)
return(NULL)
})
# Save the logs under the player's name
pitcher_logs_2024[[name]] <- logs
}
View(logs)
View(logs)
View(pitcher_logs_2024)
